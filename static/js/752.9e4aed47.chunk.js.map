{"version":3,"file":"static/js/752.9e4aed47.chunk.js","mappings":"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","sources":["pages/PathBuilderPage/blocks/InputSlider/index.tsx","pages/PathBuilderPage/index.tsx"],"sourcesContent":["import React, {useCallback} from \"react\";\nimport {Grid, Slider, SliderProps} from \"@mui/material\";\n\n\ntype Props = {\n    title?: SliderProps[\"title\"];\n    marks?: SliderProps[\"marks\"];\n    min?: SliderProps[\"min\"];\n    max?: SliderProps[\"max\"];\n    step?: number;\n    defaultValue?: SliderProps[\"defaultValue\"];\n    value?: number;\n    onChange?: (value: number) => void;\n};\n\nconst InputSlider: React.FC<Props> = (props) => {\n    const {\n        value,\n        onChange,\n        ...rest\n    } = props;\n\n    const handleChange = useCallback((e: Event, value: number|number[]) => {\n        if(!onChange) {\n            return;\n        }\n\n        onChange(value as number);\n    }, [onChange]);\n\n    return (\n        <Grid container spacing={2} alignItems=\"center\">\n            <Grid item width={50}>\n                {value}\n            </Grid>\n\n            <Grid item xs>\n                <Slider\n                  {...rest}\n                  value={value}\n                  onChange={handleChange} />\n            </Grid>\n        </Grid>\n    );\n};\n\n\nexport {InputSlider};\n","import React, {useState, useRef, useCallback, useEffect, MouseEvent as RMouseEvent} from \"react\";\nimport {Container, Grid, Switch} from \"@mui/material\";\nimport {Scene, Cube, Point2D, Point} from \"motor-js\";\n\nimport {InputSlider} from \"./blocks\";\n\n\nconst PathBuilderPage: React.FC = () => {\n    const [isRunning, setRunning] = useState(true);\n    const [fov, setFov] = useState(100);\n    const [position, setPosition] = useState<Point>({x: 0, y: 0, z: 0});\n    const [direction, setDirection] = useState<Point>({x: 0, y: 0, z: 1});\n    const [pitch, setPitch] = useState(0);\n    const [yaw, setYaw] = useState(0);\n    const [angle, setAngle] = useState(0);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const rootRef = useRef<HTMLDivElement>(null);\n    const sceneRef = useRef<Scene>();\n\n    const handleChangeFov = useCallback((fov: number) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const scene = sceneRef.current;\n\n        scene.getCamera().setFov(fov);\n        setFov(fov);\n    }, []);\n\n    const getPointProject = useCallback((point: Point, direction: Point) => {\n        if(point.z === direction.z) {\n            return {\n                x: 0,\n                y: 0\n            };\n        }\n\n        const scale = direction.z / (direction.z + point.z);\n\n        return {\n            x: scale * (point.x - direction.x),\n            y: scale * (point.y - direction.y)\n        };\n    }, [position, direction]);\n\n    const handleChangeAngle = useCallback((angle: number) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const scene = sceneRef.current;\n\n        scene.getCamera().setAngle(angle);\n        setAngle(angle);\n    }, []);\n\n    const handleChangeDirection = useCallback((direction: Point) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const scene = sceneRef.current;\n\n        scene.getCamera().setDirection(direction);\n        setDirection(direction);\n    }, []);\n\n    const handleChangePosition = useCallback((position: Point) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const scene = sceneRef.current;\n\n        const camera = scene.getCamera();\n\n        camera.setPosition(position);\n        setPosition(position);\n    }, []);\n\n    const handleChangePitch = useCallback((pitch: number) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const camera = sceneRef.current.getCamera();\n\n        camera.setPitch(pitch);\n        setPitch(pitch);\n        setDirection(camera.getDirection());\n    }, []);\n\n    const handleChangeYaw = useCallback((yaw: number) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const camera = sceneRef.current.getCamera();\n\n        camera.setYaw(yaw);\n        setYaw(yaw);\n        setDirection(camera.getDirection());\n    }, []);\n\n    const handleClick = useCallback((e: RMouseEvent) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const scene = sceneRef.current;\n        scene.getCamera().activateDebug();\n\n        e.preventDefault();\n        e.stopPropagation();\n    }, []);\n\n    const handleMouseDown = useCallback((e: RMouseEvent) => {\n        if(!sceneRef.current) {\n            return;\n        }\n\n        const scene = sceneRef.current;\n\n        const handleMove = (e: MouseEvent) => {\n            const camera = scene.getCamera();\n\n            camera.setDirectionFromAngles(\n                Math.max(Math.min(camera.getPitch() - e.movementY * 0.5, 90), -90),\n                camera.getYaw() + e.movementX * 0.5\n            );\n\n            setPitch(camera.getPitch());\n            setYaw(camera.getYaw());\n            setDirection(camera.getDirection());\n        };\n\n        const handleUp = () => {\n            document.removeEventListener(\"mousemove\", handleMove);\n            document.removeEventListener(\"mouseup\", handleUp);\n        };\n\n        document.addEventListener(\"mousemove\", handleMove);\n        document.addEventListener(\"mouseup\", handleUp);\n    }, []);\n\n    useEffect(() => {\n        if(!rootRef.current) {\n            return;\n        }\n\n        if(!isRunning) {\n            return;\n        }\n\n        const scene = (window as any).scene = sceneRef.current = new Scene(\"svg\");\n\n        const camera = scene.getCamera();\n\n        camera.setFov(fov);\n        camera.setPosition(position);\n        camera.setDirection(direction);\n        camera.setPitch(pitch);\n        camera.setYaw(yaw);\n\n        scene.run(rootRef.current);\n\n        scene.add(new Cube(100, 100, 100), {x: -200, y: 0, z: 0});\n        scene.add(new Cube(200, 1, 200), {x: -200, y: -51, z: 0});\n        // scene.add(new Cube(200, 1, 200), {x: 0, y: -51, z: 0});\n        // scene.add(new Cube(200, 1, 200), {x: 0, y: -51, z: -200});\n        // scene.add(new Cube(200, 1, 200), {x: -200, y: -51, z: -200});\n\n        return () => {\n            scene.stop();\n        };\n    }, [isRunning]);\n\n    useEffect(() => {\n        const handleKeydown = (e: KeyboardEvent) => {\n            if(!sceneRef.current) {\n                return;\n            }\n\n            const scene = sceneRef.current;\n            const position = scene.getCamera().getPosition();\n\n            switch(e.key) {\n                case \"ArrowUp\":\n                    handleChangePosition({\n                        ...position,\n                        z: position.z + 1\n                    });\n                    break;\n\n                case \"ArrowDown\":\n                    handleChangePosition({\n                        ...position,\n                        z: position.z - 1\n                    });\n                    break;\n\n                case \"ArrowLeft\":\n                    handleChangePosition({\n                        ...position,\n                        x: position.x + 1\n                    });\n                    break;\n\n                case \"ArrowRight\":\n                    handleChangePosition({\n                        ...position,\n                        x: position.x - 1\n                    });\n                    break;\n\n                case \"w\": {\n                    const camera = scene.getCamera();\n\n                    camera.setPosition({\n                        x: camera.getPosition().x + camera.getDirection().x,\n                        y: camera.getPosition().y + camera.getDirection().y,\n                        z: camera.getPosition().z + camera.getDirection().z\n                    });\n                    setPosition(camera.getPosition());\n                    e.preventDefault();\n                    e.stopPropagation();\n                    break;\n                }\n\n                case \"a\": {\n                    const camera = scene.getCamera();\n\n                    camera.setPosition({\n                        x: camera.getPosition().x + camera.getDirectionLeft().x,\n                        y: camera.getPosition().y + camera.getDirectionLeft().y,\n                        z: camera.getPosition().z + camera.getDirectionLeft().z\n                    });\n                    setPosition(camera.getPosition());\n                    e.preventDefault();\n                    e.stopPropagation();\n                    break;\n                }\n\n                case \"d\": {\n                    const camera = scene.getCamera();\n\n                    camera.setPosition({\n                        x: camera.getPosition().x - camera.getDirectionLeft().x,\n                        y: camera.getPosition().y - camera.getDirectionLeft().y,\n                        z: camera.getPosition().z - camera.getDirectionLeft().z\n                    });\n                    setPosition(camera.getPosition());\n                    e.preventDefault();\n                    e.stopPropagation();\n                    break;\n                }\n\n                case \"s\": {\n                    const camera = scene.getCamera();\n\n                    camera.setPosition({\n                        x: camera.getPosition().x - camera.getDirection().x,\n                        y: camera.getPosition().y - camera.getDirection().y,\n                        z: camera.getPosition().z - camera.getDirection().z\n                    });\n                    setPosition(camera.getPosition());\n                    e.preventDefault();\n                    e.stopPropagation();\n                    break;\n                }\n\n                case \"q\": {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    break;\n                }\n\n                case \"e\": {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    break;\n                }\n            }\n        };\n\n        document.addEventListener(\"keydown\", handleKeydown);\n\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeydown);\n        };\n    }, [handleChangePosition]);\n\n    useEffect(() => {\n        if(!canvasRef.current) {\n            return;\n        }\n\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n\n        if(!context) {\n            return;\n        }\n\n        const center = {x: 0, y: 0, z: 0};\n\n        const camera = {\n            x: -40,\n            y: -20,\n            z: -500\n        };\n\n        const drawPoint = (point: Point, color: string = \"#FFFFFF\") => {\n            const projected: Point2D = getPointProject(point, camera);\n            const size = 2;\n\n            console.log(\"projected\", projected);\n\n            context.fillStyle = color;\n            context.fillRect(canvas.width / 2 + (projected.x + camera.x) - size / 2, canvas.height / 2 - (projected.y + camera.y) - size / 2, size, size);\n        };\n\n        const drawLine = (pointStart: Point, pointEnd: Point, color = \"#FFFFFF\") => {\n            const start = getPointProject(pointStart, camera),\n                end = getPointProject(pointEnd, camera);\n\n            context.strokeStyle = color;\n            context.lineWidth = 1;\n            context.beginPath();\n            context.moveTo(canvas.width / 2 + start.x + camera.x, canvas.height / 2 - (start.y + camera.y));\n            context.lineTo(canvas.width / 2 + end.x + camera.x, canvas.height / 2 - (end.y + camera.y));\n            context.stroke();\n            context.closePath();\n        };\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        drawLine({x: -150, y: 0, z: 0}, {x: 150, y: 0, z: 0});\n        drawLine({x: 0, y: -150, z: 0}, {x: 0, y: 150, z: 0});\n        drawLine({x: 0, y: 0, z: -150}, {x: 0, y: 0, z: 150});\n\n        // const line1Start: Point = {x: -50, y: 20, z: 0};\n        // const line1End: Point = {x: 50, y: 20, z: 0};\n        // const line2Start: Point = {x: 20, y: -20, z: 0};\n        // const line2End: Point = {x: 20, y: 50, z: 0};\n\n        // drawLine(line1Start, line1End, \"#990000\");\n        // drawLine(line2Start, line2End, \"#CC9900\");\n\n        // const v1: Point = {\n        //     x: line1End.x - line1Start.x,\n        //     y: line1End.y - line1Start.y,\n        //     z: line1End.z - line1Start.z\n        // };\n\n        // const v2: Point = {\n        //     x: line2End.x - line2Start.x,\n        //     y: line2End.y - line2Start.y,\n        //     z: line2End.z - line2Start.z\n        // };\n\n        // const cross: Point = {\n        //     x: v1.y * v2.z - v1.z * v2.y,\n        //     y: v1.z * v2.x - v1.x * v2.z,\n        //     z: v1.x * v2.y - v1.y * v2.x\n        // };\n\n        // const v3: Point = {\n        //     x: line2Start.x - line1Start.x,\n        //     y: line2Start.y - line1Start.y,\n        //     z: line2Start.z - line1Start.z\n        // };\n\n        // const den: number = v1.x * v2.y * v3.z\n        //     + v2.x * v3.y * v1.z\n        //     + v3.x * v1.y * v2.z\n        //     - v1.x * v3.y * v2.z\n        //     - v2.x * v1.y * v3.z\n        //     - v3.x * v2.y * v1.z;\n        // let t1 = ((line2Start.x - line1Start.x) * v2.y - (line2Start.y - line1Start.y) * v2.x) / (v1.x * v2.y - v1.y * v2.x);\n        // let t2 = ((P2.x - P1.x) * V1.y - (P2.y - P1.y) * V1.x) / (V1.x * V2.y - V1.y * V2.x);\n\n        // let r1 = {\n        //     x: line1Start.x + t1 * v1.x,\n        //     y: line1Start.y + t1 * v1.y,\n        //     z: line1Start.z + t1 * v1.z\n        // };\n\n        // drawPoint(v1, \"#DD00FF\");\n        // drawPoint(v2, \"#DDCC00\");\n        // drawPoint(v3, \"#00FF00\");\n        // drawPoint(cross, \"#FFFF00\");\n        // drawPoint(r1, \"#0000FF\");\n\n        // drawLine(v1, v2);\n        // drawLine(v2, cross);\n        // drawLine(cross, v1);\n\n        // console.log(v1, v2, v3, cross, den);\n        // console.log(\"getLineIntersection:\", getLineIntersection([{x: -100, y: 0, z: 0}, {x: 100, y: 0, z: 0}], [{x: 0, y: -100, z: 0}, {x: 0, y: 100, z: 0}]));\n\n        // drawLine(center, position, \"#FFFF00\");\n        // drawLine(center, direction, \"#FF0000\");\n\n        // const rotatedPosition = rotatePoint(position, direction);\n\n        // drawLine(center, rotatedPosition, \"#FF00FF\");\n    }, [position, direction]);\n\n    return (\n        <Container>\n            <Switch\n              checked={isRunning}\n              onChange={(e, checked) => {\n                setRunning(checked);\n              }} />\n\n            <InputSlider\n              title=\"FOV\"\n              min={0}\n              max={200}\n              value={fov}\n              onChange={handleChangeFov} />\n\n            <InputSlider\n              min={-90}\n              max={90}\n              title=\"Pitch\"\n              value={pitch}\n              onChange={handleChangePitch} />\n\n            <InputSlider\n              min={-180}\n              max={180}\n              title=\"Yaw\"\n              value={yaw}\n              onChange={handleChangeYaw} />\n\n            {/*<InputSlider\n              min={-360}\n              max={360}\n              title=\"Roll\"\n              value={angle}\n              onChange={handleChangeAngle} />*/}\n\n            <Grid container spacing={10}>\n                <Grid container item xs={6} spacing={1}>\n                    <Grid item xs={12}>\n                        <InputSlider\n                          min={-100}\n                          max={100}\n                          defaultValue={0}\n                          title=\"Position X\"\n                          marks={[\n                            {label: \"-100\", value: -100},\n                            {label: \"0\", value: 0},\n                            {label: \"100\", value: 100}\n                          ]}\n                          value={position.x}\n                          onChange={(value) => {\n                            handleChangePosition({\n                                ...position,\n                                x: value\n                            });\n                          }} />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <InputSlider\n                          min={-100}\n                          max={100}\n                          marks={[\n                            {label: \"-100\", value: -100},\n                            {label: \"0\", value: 0},\n                            {label: \"100\", value: 100}\n                          ]}\n                          title=\"Position Y\"\n                          value={position.y}\n                          onChange={(value) => {\n                            handleChangePosition({\n                               ...position,\n                               y: value\n                            });\n                          }} />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <InputSlider\n                          min={-100}\n                          max={100}\n                          marks={[\n                            {label: \"-100\", value: -100},\n                            {label: \"0\", value: 0},\n                            {label: \"100\", value: 100}\n                          ]}\n                          title=\"Position Z\"\n                          value={position.z}\n                          onChange={(value) => {\n                            handleChangePosition({\n                                ...position,\n                                z: value\n                            });\n                          }} />\n                    </Grid>\n                </Grid>\n\n                <Grid container item xs={6} spacing={1}>\n                    <Grid item xs={12}>\n                        <InputSlider\n                          min={-1}\n                          max={1}\n                          step={0.01}\n                          marks={[\n                            {label: \"-1\", value: -1},\n                            {label: \"0\", value: 0},\n                            {label: \"1\", value: 1}\n                          ]}\n                          title=\"Direction X\"\n                          value={direction.x}\n                          onChange={(value) => {\n                            handleChangeDirection({\n                                ...direction,\n                                x: value as number\n                            });\n                          }} />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <InputSlider\n                          min={-1}\n                          max={1}\n                          step={0.01}\n                          marks={[\n                            {label: \"-1\", value: -1},\n                            {label: \"0\", value: 0},\n                            {label: \"1\", value: 1}\n                          ]}\n                          title=\"Direction Y\"\n                          value={direction.y}\n                          onChange={(value) => {\n                            handleChangeDirection({\n                               ...direction,\n                               y: value as number\n                            });\n                          }} />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <InputSlider\n                          min={-1}\n                          max={1}\n                          step={0.01}\n                          marks={[\n                            {label: \"-1\", value: -1},\n                            {label: \"0\", value: 0},\n                            {label: \"1\", value: 1}\n                          ]}\n                          title=\"Direction Z\"\n                          value={direction.z}\n                          onChange={(value) => {\n                            handleChangeDirection({\n                                ...direction,\n                                z: value as number\n                            });\n                          }} />\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <div\n                      style={{\n                        width: \"100%\",\n                        height: \"300px\"\n                      }}\n                      ref={rootRef}\n                      onContextMenu={handleClick}\n                      onMouseDown={handleMouseDown} />\n                </Grid>\n\n                {/*<Grid item xs={4} display=\"flex\" justifyContent=\"flex-end\">\n                    <PathBuilder\n                      context=\"svg\"\n                      running={isRunning}\n                      fov={fov}\n                      position={position}\n                      direction={direction}\n                      angle={angle} />\n                </Grid>*/}\n\n                {/*<Grid item xs={4}>\n                    <PathBuilder\n                      context=\"canvas\"\n                      running={isRunning}\n                      fov={fov}\n                      position={position}\n                      direction={direction}\n                      angle={angle} />\n                </Grid>*/}\n\n                {/*<Grid item xs={6}>\n                    <canvas\n                      ref={canvasRef}\n                      width={400}\n                      height={400} />\n                </Grid>*/}\n\n                {/*<Grid item xs={6}>\n                    <pre>{JSON.stringify({fov, position, direction}, null, 4)}</pre>\n                </Grid>*/}\n            </Grid>\n        </Container>\n    );\n};\n\n\nexport default PathBuilderPage;\n"],"names":["InputSlider","props","value","onChange","rest","handleChange","useCallback","e","_jsxs","Grid","container","spacing","alignItems","children","_jsx","item","width","xs","Slider","PathBuilderPage","isRunning","setRunning","useState","fov","setFov","position","setPosition","x","y","z","direction","setDirection","pitch","setPitch","yaw","setYaw","angle","setAngle","canvasRef","useRef","rootRef","sceneRef","handleChangeFov","current","getCamera","getPointProject","point","scale","handleChangeDirection","handleChangePosition","handleChangePitch","camera","getDirection","handleChangeYaw","handleClick","activateDebug","preventDefault","stopPropagation","handleMouseDown","scene","handleMove","setDirectionFromAngles","Math","max","min","getPitch","movementY","getYaw","movementX","handleUp","document","removeEventListener","addEventListener","useEffect","window","Scene","run","add","Cube","stop","handleKeydown","getPosition","key","getDirectionLeft","canvas","context","getContext","drawLine","pointStart","pointEnd","color","arguments","length","undefined","start","end","strokeStyle","lineWidth","beginPath","moveTo","height","lineTo","stroke","closePath","clearRect","Container","Switch","checked","title","defaultValue","marks","label","step","style","ref","onContextMenu","onMouseDown"],"sourceRoot":""}